// <auto-generated />
using System;
using MVCApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVCApp.Migrations
{
    [DbContext(typeof(TestappdbContext))]
    partial class TestappdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MVCApp.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("MVCApp.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("MVCApp.LanguageUser", b =>
                {
                    b.Property<int>("LanguagesId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("LanguagesId", "UsersId");

                    b.HasIndex(new[] { "UsersId" }, "IX_LanguageUser_UsersId");

                    b.ToTable("LanguageUser");
                });

            modelBuilder.Entity("MVCApp.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserDataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CompanyId" }, "IX_Users_CompanyId");

                    b.HasIndex(new[] { "UserDataId" }, "IX_Users_UserDataId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MVCApp.UserDatum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Additional")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserData");
                });

            modelBuilder.Entity("MVCApp.LanguageUser", b =>
                {
                    b.HasOne("MVCApp.Language", "Languages")
                        .WithMany("LanguageUsers")
                        .HasForeignKey("LanguagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCApp.User", "Users")
                        .WithMany("LanguageUsers")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Languages");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MVCApp.User", b =>
                {
                    b.HasOne("MVCApp.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId");

                    b.HasOne("MVCApp.UserDatum", "UserData")
                        .WithMany("Users")
                        .HasForeignKey("UserDataId");

                    b.Navigation("Company");

                    b.Navigation("UserData");
                });

            modelBuilder.Entity("MVCApp.Company", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MVCApp.Language", b =>
                {
                    b.Navigation("LanguageUsers");
                });

            modelBuilder.Entity("MVCApp.User", b =>
                {
                    b.Navigation("LanguageUsers");
                });

            modelBuilder.Entity("MVCApp.UserDatum", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
